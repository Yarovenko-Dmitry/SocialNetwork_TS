{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","DialogsItem","props","path","id","className","s","dialog","active","to","name","Message","message","maxLength50","maxLengthCreator","AddMassageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","state","dialogsPage","dialogElements","dialogs","map","d","key","messagesElements","messages","m","dialogsItems","values","sendMessage","newMessageBody","compose","connect","dispatch","actions","sendMessageActionCreator","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,+FCQtMC,EAAc,SAACC,GAC1B,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACE,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QACjC,kBAAC,IAAD,CAASC,GAAIN,GAAOD,EAAMQ,QCNnBC,EAAU,SAACT,GACtB,OACE,yBAAKG,UAAWC,IAAEM,SAAUV,EAAMU,U,kCCqChCC,EAAcC,YAAiB,IAmB/BC,EAAsBC,YAAkC,CAACC,KAAM,wBAAzCD,EAjBgD,SAACd,GAC3E,OACE,0BAAMgB,SAAUhB,EAAMiB,cACpB,6BACE,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXZ,KAAM,iBACNa,YAAa,qBACbC,SAAU,CAACC,IAAUZ,MAG9B,6BACE,6CAQOa,EAjDC,SAACxB,GAEf,IAAIyB,EAAQzB,EAAM0B,YAEdC,EAAiBF,EAAMG,QAAQC,KAAI,SAACC,GAAD,OAAmB,kBAAC,EAAD,CAAatB,KAAMsB,EAAEtB,KAAMuB,IAAKD,EAAE5B,GAAIA,GAAI4B,EAAE5B,QAClG8B,EAAmBP,EAAMQ,SAASJ,KAAI,SAACK,GAAD,OAAoB,kBAAC,EAAD,CAASxB,QAASwB,EAAExB,QAASqB,IAAKG,EAAEhC,QAMlG,OACE,yBAAKC,UAAWC,IAAEwB,SAChB,yBAAKzB,UAAWC,IAAE+B,cACfR,GAEH,yBAAKxB,UAAWC,IAAE6B,UAChB,6BAAMD,GACN,kBAACnB,EAAD,CAAqBG,SAXP,SAACoB,GACnBpC,EAAMqC,YAAYD,EAAOE,sB,wBCAdC,sBACbC,aAjBoB,SAACf,GACrB,MAAO,CACLC,YAAaD,EAAMC,gBAME,SAACe,GACxB,MAAO,CACLJ,YAAa,SAACC,GACZG,EAASC,IAAQC,yBAAyBL,SAO9CM,IAFaL,CAGbf","file":"static/js/4.27633961.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__hY3sd\",\"dialogsItems\":\"Dialogs_dialogsItems__1-yn-\",\"active\":\"Dialogs_active__3l9bW\",\"dialog\":\"Dialogs_dialog__1O8yL\",\"messages\":\"Dialogs_messages__QbIiq\",\"message\":\"Dialogs_message__2cwos\"};","import s from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\ntype DialogsItemType = {\r\n  name: string,\r\n  id: number\r\n};\r\n\r\nexport const DialogsItem = (props: DialogsItemType) => {\r\n  let path = '/dialogs/' + props.id\r\n  return (\r\n    <div className={s.dialog + ' ' + s.active}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  )\r\n};","import s from \"./Dialogs.module.css\";\r\nimport React from \"react\";\r\n\r\ntype MessageType = {\r\n  message: string\r\n};\r\n\r\nexport const Message = (props: MessageType) => {\r\n  return (\r\n    <div className={s.message}>{props.message}</div>\r\n  )\r\n};","import React from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport {DialogsItem} from \"./DialogItem/DialogItem\";\r\nimport {Message} from \"./Message\";\r\n\r\nimport {DialogType, MessageType} from \"../../index\";\r\nimport {DialogsPageType} from \"../../redux/redux-store\";\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport {maxLengthCreator, required} from '../../utils/validators/validators';\r\nimport {Textarea} from '../common/FormsControls/FormsControls';\r\n\r\nexport type DialogsType = {\r\n  sendMessage: (values: string) => void,\r\n  updateNewMessageBody: (body: string) => void,\r\n  dialogsPage: DialogsPageType,\r\n  isAuth: boolean\r\n};\r\n\r\nconst Dialogs = (props: DialogsType) => {\r\n\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogElements = state.dialogs.map((d: DialogType) => <DialogsItem name={d.name} key={d.id} id={d.id}/>);\r\n  let messagesElements = state.messages.map((m: MessageType) => <Message message={m.message} key={m.id}/>);\r\n\r\n  let addNewMessage = (values: AddMassageFormDataType) => {\r\n    props.sendMessage(values.newMessageBody);\r\n  }\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>\r\n        {dialogElements}\r\n      </div>\r\n      <div className={s.messages}>\r\n        <div>{messagesElements}</div>\r\n        <AddMassageFormRedux onSubmit={addNewMessage}/>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport type AddMassageFormDataType = {\r\n  newMessageBody: string\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMassageForm: React.FC<InjectedFormProps<AddMassageFormDataType>> = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea}\r\n               name={'newMessageBody'}\r\n               placeholder={'Enter your message'}\r\n               validate={[required, maxLength50]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddMassageFormRedux = reduxForm<AddMassageFormDataType>({form: 'dialogAddMassageForm'})(AddMassageForm);\r\n\r\nexport default Dialogs;","import React, {Dispatch, FC} from \"react\";\r\nimport {actions, ActionType} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {StateType} from \"../../redux/redux-store\";\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state: StateType) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  }\r\n};\r\n\r\n\r\ntype DispatchType = Dispatch<ActionType>;\r\nlet mapDispatchToProps = (dispatch: DispatchType) => {\r\n  return {\r\n    sendMessage: (newMessageBody: string) => {\r\n      dispatch(actions.sendMessageActionCreator(newMessageBody));\r\n    },\r\n  }\r\n};\r\n\r\nexport default compose<FC>(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}